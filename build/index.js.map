{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 49c3d456d0deb8cf6f5f","webpack:///./src/lib/index.js","webpack:///./src/lib/components/Keyboard.js","webpack:///./src/lib/services/PhysicalKeyboard.js","webpack:///./src/lib/services/KeyboardLayout.js","webpack:///./src/lib/services/Utilities.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0__components_Keyboard__","_classCallCheck","instance","Constructor","TypeError","__WEBPACK_IMPORTED_MODULE_0__Keyboard_css__","__WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__","__WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__","__WEBPACK_IMPORTED_MODULE_3__services_Utilities__","_typeof","Symbol","iterator","obj","constructor","SimpleKeyboard","_this","handleButtonClicked","button","debug","options","input","inputName","updatedInput","utilities","getUpdatedInput","caretPosition","maxLength","handleMaxLength","console","log","syncInstanceInputs","onChange","onKeyPress","dispatch","section","replaceInput","clearInput","getInput","setInput","inputObj","setOptions","option","assign","render","clear","keyboardDOM","innerHTML","className","keyboardDOMClass","buttonElements","callback","window","warn","Error","keys","forEach","key","addButtonTheme","buttons","split","classNameItem","buttonTheme","classNameFound","map","class","includes","buttonThemeArray","push","join","removeButtonTheme","Array","isArray","length","index","filteredButtonArray","filter","item","splice","getButtonElement","output","buttonArr","handleCaret","document","addEventListener","caretEventHandler","event","targetTagName","target","tagName","toLowerCase","selectionStart","onInit","onRender","layoutClass","layout","layoutName","getDefaultLayout","buttonThemesParsed","themeObj","themeButtons","themeButton","themeParsed","countInArray","theme","row","rIndex","rowArray","rowDOM","createElement","setAttribute","bIndex","fctBtnClass","getButtonClass","buttonThemeClass","buttonDisplayName","getButtonDisplayName","display","mergeDisplay","buttonDOM","onclick","buttonUID","buttonSpanDOM","appendChild","initialized","keyboardDOMQuery","arguments","undefined","querySelector","timers","camelCase","physicalKeyboardInterface","PhysicalKeyboard","simpleKeyboardInstance","initKeyboardListener","physicalKeyboardHighlight","buttonPressed","getSimpleKeyboardLayoutKey","style","backgroundColor","physicalKeyboardHighlightBgColor","color","physicalKeyboardHighlightTextColor","removeAttribute","code","toUpperCase","Number","isInteger","KeyboardLayout","default","shift","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","Utilities","buttonTypeClass","buttonWithoutBraces","replace","buttonNormalized","getDefaultDiplay","caretPos","removeAt","addStringAt","tabCharOnTab","newLineOnEnter","updateCaretPos","minus","isMaxLengthReached","Boolean","maxLengthReached","string","trim","reduce","word","slice","array","x","{bksp}","{backspace}","{enter}","{shift}","{shiftleft}","{shiftright}","{alt}","{s}","{tab}","{lock}","{capslock}","{accept}","{space}","{//}","{esc}","{escape}","{f1}","{f2}","{f3}","{f4}","{f5}","{f6}","{f7}","{f8}","{f9}","{f10}","{f11}","{f12}","{numpaddivide}","{numlock}","{arrowup}","{arrowleft}","{arrowdown}","{arrowright}","{prtscr}","{scrolllock}","{pause}","{insert}","{home}","{pageup}","{delete}","{end}","{pagedown}","{numpadmultiply}","{numpadsubtract}","{numpadadd}","{numpadenter}","{period}","{numpaddecimal}","{numpad0}","{numpad1}","{numpad2}","{numpad3}","{numpad4}","{numpad5}","{numpad6}","{numpad7}","{numpad8}","{numpad9}","source","position","prevTwoChars","emojiMatched","emojiMatchedReg","substring","match","substr","currentInput","condition"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SimpleKeyboard\"] = factory();\n\telse\n\t\troot[\"SimpleKeyboard\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__components_Keyboard__ = __webpack_require__(2);\n/* harmony default export */ __webpack_exports__[\"default\"] = (__WEBPACK_IMPORTED_MODULE_0__components_Keyboard__[\"a\" /* default */]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Keyboard_css__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Keyboard_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__Keyboard_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__ = __webpack_require__(5);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__services_Utilities__ = __webpack_require__(6);\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}// Services\nvar SimpleKeyboard=function SimpleKeyboard(){var _this=this;_classCallCheck(this,SimpleKeyboard);this.handleButtonClicked=function(button){var debug=_this.options.debug;/**\n     * Ignoring placeholder buttons\n     */if(button==='{//}')return false;if(!_this.input[_this.options.inputName])_this.input[_this.options.inputName]='';var updatedInput=_this.utilities.getUpdatedInput(button,_this.input[_this.options.inputName],_this.options,_this.caretPosition);if(_this.input[_this.options.inputName]!==updatedInput){/**\n       * If maxLength and handleMaxLength yield true, halting\n       */if(_this.options.maxLength&&_this.utilities.handleMaxLength(_this.input,_this.options,updatedInput)){return false;}_this.input[_this.options.inputName]=updatedInput;if(debug)console.log('Input changed:',_this.input);/**\n       * syncInstanceInputs\n       */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);/**\n       * Calling onChange\n       */if(typeof _this.options.onChange===\"function\")_this.options.onChange(_this.input[_this.options.inputName]);}/**\n     * Calling onKeyPress\n     */if(typeof _this.options.onKeyPress===\"function\")_this.options.onKeyPress(button);if(debug){console.log(\"Key pressed:\",button);}};this.syncInstanceInputs=function(){_this.dispatch(function(section){section.replaceInput(_this.input);});};this.clearInput=function(inputName){inputName=inputName||_this.options.inputName;_this.input[_this.options.inputName]='';/**\n     * syncInstanceInputs\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);};this.getInput=function(inputName){inputName=inputName||_this.options.inputName;/**\n     * syncInstanceInputs\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);return _this.input[_this.options.inputName];};this.setInput=function(input,inputName){inputName=inputName||_this.options.inputName;_this.input[inputName]=input;/**\n     * syncInstanceInputs\n     */if(_this.options.syncInstanceInputs)_this.syncInstanceInputs(_this.input);};this.replaceInput=function(inputObj){_this.input=inputObj;};this.setOptions=function(option){option=option||{};_this.options=Object.assign(_this.options,option);_this.render();};this.clear=function(){_this.keyboardDOM.innerHTML='';_this.keyboardDOM.className=_this.keyboardDOMClass;_this.buttonElements={};};this.dispatch=function(callback){if(!window['SimpleKeyboardInstances']){console.warn('SimpleKeyboardInstances is not defined. Dispatch cannot be called.');throw new Error(\"INSTANCES_VAR_ERROR\");}return Object.keys(window['SimpleKeyboardInstances']).forEach(function(key){callback(window['SimpleKeyboardInstances'][key],key);});};this.addButtonTheme=function(buttons,className){if(!className||!buttons)return false;buttons.split(\" \").forEach(function(button){className.split(\" \").forEach(function(classNameItem){if(!_this.options.buttonTheme)_this.options.buttonTheme=[];var classNameFound=false;/**\n         * If class is already defined, we add button to class definition\n         */_this.options.buttonTheme.map(function(buttonTheme){if(buttonTheme.class.split(\" \").includes(classNameItem)){classNameFound=true;var buttonThemeArray=buttonTheme.buttons.split(\" \");if(!buttonThemeArray.includes(button)){classNameFound=true;buttonThemeArray.push(button);buttonTheme.buttons=buttonThemeArray.join(\" \");}}return buttonTheme;});/**\n         * If class is not defined, we create a new entry\n         */if(!classNameFound){_this.options.buttonTheme.push({class:classNameItem,buttons:buttons});}});});_this.render();};this.removeButtonTheme=function(buttons,className){/**\n     * When called with empty parameters, remove all button themes\n     */if(!buttons&&!className){_this.options.buttonTheme=[];_this.render();return false;}/**\n     * If buttons are passed and buttonTheme has items\n     */if(buttons&&Array.isArray(_this.options.buttonTheme)&&_this.options.buttonTheme.length){var buttonArray=buttons.split(\" \");buttonArray.forEach(function(button,key){_this.options.buttonTheme.map(function(buttonTheme,index){/**\n           * If className is set, we affect the buttons only for that class\n           * Otherwise, we afect all classes\n           */if(className&&className.includes(buttonTheme.class)||!className){var filteredButtonArray=buttonTheme.buttons.split(\" \").filter(function(item){return item!==button;});/**\n             * If buttons left, return them, otherwise, remove button Theme\n             */if(filteredButtonArray.length){buttonTheme.buttons=filteredButtonArray.join(\" \");}else{_this.options.buttonTheme.splice(index,1);buttonTheme=null;}}return buttonTheme;});});_this.render();}};this.getButtonElement=function(button){var output=void 0;var buttonArr=_this.buttonElements[button];if(buttonArr){if(buttonArr.length>1){output=buttonArr;}else{output=buttonArr[0];}}return output;};this.handleCaret=function(){if(_this.options.debug){console.log(\"Caret handling started\");}document.addEventListener(\"keyup\",_this.caretEventHandler);document.addEventListener(\"mouseup\",_this.caretEventHandler);document.addEventListener(\"touchend\",_this.caretEventHandler);};this.caretEventHandler=function(event){var targetTagName=event.target.tagName.toLowerCase();if(targetTagName===\"textarea\"||targetTagName===\"input\"){_this.caretPosition=event.target.selectionStart;if(_this.options.debug){console.log('Caret at: ',event.target.selectionStart,event.target.tagName.toLowerCase());}}};this.onInit=function(){if(_this.options.debug){console.log(\"Initialized\");}/**\n     * Caret handling\n     */_this.handleCaret();if(typeof _this.options.onInit===\"function\")_this.options.onInit();};this.onRender=function(){if(typeof _this.options.onRender===\"function\")_this.options.onRender();};this.render=function(){/**\n     * Clear keyboard\n     */_this.clear();var layoutClass=_this.options.layout?\"hg-layout-custom\":'hg-layout-'+_this.options.layoutName;var layout=_this.options.layout||__WEBPACK_IMPORTED_MODULE_2__services_KeyboardLayout__[\"a\" /* default */].getDefaultLayout();/**\n     * Account for buttonTheme, if set\n     */var buttonThemesParsed={};if(Array.isArray(_this.options.buttonTheme)){_this.options.buttonTheme.forEach(function(themeObj){if(themeObj.buttons&&themeObj.class){var themeButtons=void 0;if(typeof themeObj.buttons===\"string\"){themeButtons=themeObj.buttons.split(' ');}if(themeButtons){themeButtons.forEach(function(themeButton){var themeParsed=buttonThemesParsed[themeButton];// If the button has already been added\nif(themeParsed){// Making sure we don't add duplicate classes, even when buttonTheme has duplicates\nif(!_this.utilities.countInArray(themeParsed.split(\" \"),themeObj.class)){buttonThemesParsed[themeButton]=themeParsed+' '+themeObj.class;}}else{buttonThemesParsed[themeButton]=themeObj.class;}});}}else{console.warn('buttonTheme row is missing the \"buttons\" or the \"class\". Please check the documentation.');}});}/**\n     * Adding themeClass, layoutClass to keyboardDOM\n     */_this.keyboardDOM.className+=' '+_this.options.theme+' '+layoutClass;/**\n     * Iterating through each row\n     */layout[_this.options.layoutName].forEach(function(row,rIndex){var rowArray=row.split(' ');/**\n       * Creating empty row\n       */var rowDOM=document.createElement('div');rowDOM.setAttribute('data-keyboard',\"true\");rowDOM.className+=\"hg-row\";/**\n       * Iterating through each button in row\n       */rowArray.forEach(function(button,bIndex){var fctBtnClass=_this.utilities.getButtonClass(button);var buttonThemeClass=buttonThemesParsed[button];var buttonDisplayName=_this.utilities.getButtonDisplayName(button,_this.options.display,_this.options.mergeDisplay);/**\n         * Creating button\n         */var buttonDOM=document.createElement('div');buttonDOM.setAttribute('data-keyboard',\"true\");buttonDOM.className+='hg-button '+fctBtnClass+(buttonThemeClass?\" \"+buttonThemeClass:\"\");buttonDOM.onclick=function(){return _this.handleButtonClicked(button);};/**\n         * Adding identifier\n         */buttonDOM.setAttribute(\"data-skBtn\",button);/**\n         * Adding unique id\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\n         */var buttonUID=_this.options.layoutName+'-r'+rIndex+'b'+bIndex;buttonDOM.setAttribute(\"data-skBtnUID\",buttonUID);/**\n         * Adding display label\n         */buttonDOM.setAttribute(\"data-displayLabel\",buttonDisplayName);/**\n         * Adding button label to button\n         */var buttonSpanDOM=document.createElement('span');buttonSpanDOM.setAttribute('data-keyboard',\"true\");buttonSpanDOM.innerHTML=buttonDisplayName;buttonDOM.appendChild(buttonSpanDOM);/**\n         * Adding to buttonElements\n         */if(!_this.buttonElements[button])_this.buttonElements[button]=[];_this.buttonElements[button].push(buttonDOM);/**\n         * Appending button to row\n         */rowDOM.appendChild(buttonDOM);});/**\n       * Appending row to keyboard\n       */_this.keyboardDOM.appendChild(rowDOM);});/**\n     * Calling onRender\n     */_this.onRender();if(!_this.initialized){_this.initialized=true;/**\n       * Calling onInit\n       */_this.onInit();}};var keyboardDOMQuery=typeof(arguments.length<=0?undefined:arguments[0])===\"string\"?arguments.length<=0?undefined:arguments[0]:'.simple-keyboard';var options=_typeof(arguments.length<=0?undefined:arguments[0])===\"object\"?arguments.length<=0?undefined:arguments[0]:arguments.length<=1?undefined:arguments[1];if(!options)options={};/**\n     * Initializing Utilities\n     */this.utilities=new __WEBPACK_IMPORTED_MODULE_3__services_Utilities__[\"a\" /* default */](this);/**\n     * Processing options\n     */this.keyboardDOM=document.querySelector(keyboardDOMQuery);this.options=options;this.options.layoutName=this.options.layoutName||\"default\";this.options.theme=this.options.theme||\"hg-theme-default\";this.options.inputName=this.options.inputName||\"default\";this.input={};this.input[this.options.inputName]='';this.keyboardDOMClass=keyboardDOMQuery.split('.').join(\"\");this.timers={};this.buttonElements={};/**\n     * Rendering keyboard\n     */if(this.keyboardDOM)this.render();else{console.warn('\"'+keyboardDOMQuery+'\" was not found in the DOM.');throw new Error(\"KEYBOARD_DOM_ERROR\");}/**\n     * Saving instance\n     * This enables multiple simple-keyboard support with easier management\n     */if(!window['SimpleKeyboardInstances'])window['SimpleKeyboardInstances']={};window['SimpleKeyboardInstances'][this.utilities.camelCase(this.keyboardDOMClass)]=this;/**\n     * Physical Keyboard support\n     */this.physicalKeyboardInterface=new __WEBPACK_IMPORTED_MODULE_1__services_PhysicalKeyboard__[\"a\" /* default */](this);};/* harmony default export */ __webpack_exports__[\"a\"] = (SimpleKeyboard);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 4 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var PhysicalKeyboard=function PhysicalKeyboard(simpleKeyboardInstance){var _this=this;_classCallCheck(this,PhysicalKeyboard);this.initKeyboardListener=function(){// Normal Keyboard\ndocument.addEventListener(\"keydown\",function(event){if(_this.simpleKeyboardInstance.options.physicalKeyboardHighlight){var buttonPressed=_this.getSimpleKeyboardLayoutKey(event);_this.simpleKeyboardInstance.dispatch(function(instance){var buttonDOM=instance.getButtonElement(buttonPressed)||instance.getButtonElement(\"{\"+buttonPressed+\"}\");if(buttonDOM){buttonDOM.style.backgroundColor=_this.simpleKeyboardInstance.options.physicalKeyboardHighlightBgColor||\"#9ab4d0\";buttonDOM.style.color=_this.simpleKeyboardInstance.options.physicalKeyboardHighlightTextColor||\"white\";}});}});// Removing button style on keyup\ndocument.addEventListener(\"keyup\",function(event){if(_this.simpleKeyboardInstance.options.physicalKeyboardHighlight){var buttonPressed=_this.getSimpleKeyboardLayoutKey(event);_this.simpleKeyboardInstance.dispatch(function(instance){var buttonDOM=instance.getButtonElement(buttonPressed)||instance.getButtonElement(\"{\"+buttonPressed+\"}\");if(buttonDOM){buttonDOM.removeAttribute(\"style\");}});}});};this.getSimpleKeyboardLayoutKey=function(event){if(_this.simpleKeyboardInstance.options.debug){console.log(event);}var output=void 0;if(event.code.includes(\"Numpad\")||event.code.includes(\"Shift\")||event.code.includes(\"Space\")||event.code.includes(\"Backspace\")||event.code.includes(\"Control\")||event.code.includes(\"Alt\")||event.code.includes(\"Meta\")){output=event.code;}else{output=event.key;}/**\n     * If button is not uppercase, casting to lowercase\n     */if(output!==output.toUpperCase()||event.code[0]===\"F\"&&Number.isInteger(Number(event.code[1]))&&event.code.length<=3){output=output.toLowerCase();}return output;};this.simpleKeyboardInstance=simpleKeyboardInstance;this.initKeyboardListener();};/* harmony default export */ __webpack_exports__[\"a\"] = (PhysicalKeyboard);\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nfunction _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var KeyboardLayout=function KeyboardLayout(){_classCallCheck(this,KeyboardLayout);};KeyboardLayout.getDefaultLayout=function(){return{'default':['` 1 2 3 4 5 6 7 8 9 0 - = {bksp}','{tab} q w e r t y u i o p [ ] \\\\','{lock} a s d f g h j k l ; \\' {enter}','{shift} z x c v b n m , . / {shift}','.com @ {space}'],'shift':['~ ! @ # $ % ^ & * ( ) _ + {bksp}','{tab} Q W E R T Y U I O P { } |','{lock} A S D F G H J K L : \" {enter}','{shift} Z X C V B N M < > ? {shift}','.com @ {space}']};};/* harmony default export */ __webpack_exports__[\"a\"] = (KeyboardLayout);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar _typeof=typeof Symbol===\"function\"&&typeof Symbol.iterator===\"symbol\"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol===\"function\"&&obj.constructor===Symbol&&obj!==Symbol.prototype?\"symbol\":typeof obj;};var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Utilities=function(){function Utilities(simpleKeyboardInstance){var _this=this;_classCallCheck(this,Utilities);this.getButtonClass=function(button){var buttonTypeClass=button.includes(\"{\")&&button.includes(\"}\")&&button!=='{//}'?\"functionBtn\":\"standardBtn\";var buttonWithoutBraces=button.replace(\"{\",\"\").replace(\"}\",\"\");var buttonNormalized='';if(buttonTypeClass!==\"standardBtn\")buttonNormalized=\" hg-button-\"+buttonWithoutBraces;return\"hg-\"+buttonTypeClass+buttonNormalized;};this.getButtonDisplayName=function(button,display,mergeDisplay){if(mergeDisplay){display=Object.assign({},_this.getDefaultDiplay(),display);}else{display=display||_this.getDefaultDiplay();}return display[button]||button;};this.getUpdatedInput=function(button,input,options,caretPos){var output=input;if((button===\"{bksp}\"||button===\"{backspace}\")&&output.length>0){output=_this.removeAt(output,caretPos);}else if(button===\"{space}\")output=_this.addStringAt(output,\" \",caretPos);else if(button===\"{tab}\"&&!(typeof options.tabCharOnTab===\"boolean\"&&options.tabCharOnTab===false)){output=_this.addStringAt(output,\"\\t\",caretPos);}else if((button===\"{enter}\"||button===\"{numpadenter}\")&&options.newLineOnEnter)output=_this.addStringAt(output,\"\\n\",caretPos);else if(button.includes(\"numpad\")&&Number.isInteger(Number(button[button.length-2]))){output=_this.addStringAt(output,button[button.length-2],caretPos);}else if(button===\"{numpaddivide}\")output=_this.addStringAt(output,'/',caretPos);else if(button===\"{numpadmultiply}\")output=_this.addStringAt(output,'*',caretPos);else if(button===\"{numpadsubtract}\")output=_this.addStringAt(output,'-',caretPos);else if(button===\"{numpadadd}\")output=_this.addStringAt(output,'+',caretPos);else if(button===\"{numpaddecimal}\")output=_this.addStringAt(output,'.',caretPos);else if(button===\"{\"||button===\"}\")output=_this.addStringAt(output,button,caretPos);else if(!button.includes(\"{\")&&!button.includes(\"}\"))output=_this.addStringAt(output,button,caretPos);return output;};this.updateCaretPos=function(length,minus){if(minus){if(_this.simpleKeyboardInstance.caretPosition>0)_this.simpleKeyboardInstance.caretPosition=_this.simpleKeyboardInstance.caretPosition-length;}else{_this.simpleKeyboardInstance.caretPosition=_this.simpleKeyboardInstance.caretPosition+length;}};this.isMaxLengthReached=function(){return Boolean(_this.maxLengthReached);};this.camelCase=function(string){return string.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce(function(string,word){return string+word[0].toUpperCase()+word.slice(1);});};this.countInArray=function(array,value){return array.reduce(function(n,x){return n+(x===value);},0);};this.simpleKeyboardInstance=simpleKeyboardInstance;}_createClass(Utilities,[{key:\"getDefaultDiplay\",value:function getDefaultDiplay(){return{'{bksp}':'⌫','{backspace}':'⌫','{enter}':'enter ↵','{shift}':'shift  ⇧','{shiftleft}':'shift  ⇧','{shiftright}':'shift  ⇧','{alt}':'alt','{s}':'shift','{tab}':'tab ↹','{lock}':'caps ⇪','{capslock}':'caps lock ⇪','{accept}':'Submit','{space}':' ','{//}':' ',\"{esc}\":\"Esc\",\"{escape}\":\"Esc\",\"{f1}\":\"f1\",\"{f2}\":\"f2\",\"{f3}\":\"f3\",\"{f4}\":\"f4\",\"{f5}\":\"f5\",\"{f6}\":\"f6\",\"{f7}\":\"f7\",\"{f8}\":\"f8\",\"{f9}\":\"f9\",\"{f10}\":\"f10\",\"{f11}\":\"f11\",\"{f12}\":\"f12\",'{numpaddivide}':'/','{numlock}':'lock',\"{arrowup}\":\"↑\",\"{arrowleft}\":\"←\",\"{arrowdown}\":\"↓\",\"{arrowright}\":\"→\",\"{prtscr}\":\"print\",\"{scrolllock}\":\"scroll\",\"{pause}\":\"pause\",\"{insert}\":\"ins\",\"{home}\":\"home\",\"{pageup}\":\"up\",\"{delete}\":\"del\",\"{end}\":\"end\",\"{pagedown}\":\"down\",\"{numpadmultiply}\":\"*\",\"{numpadsubtract}\":\"-\",\"{numpadadd}\":\"+\",\"{numpadenter}\":\"enter\",\"{period}\":\".\",\"{numpaddecimal}\":\".\",\"{numpad0}\":\"0\",\"{numpad1}\":\"1\",\"{numpad2}\":\"2\",\"{numpad3}\":\"3\",\"{numpad4}\":\"4\",\"{numpad5}\":\"5\",\"{numpad6}\":\"6\",\"{numpad7}\":\"7\",\"{numpad8}\":\"8\",\"{numpad9}\":\"9\"};}},{key:\"addStringAt\",value:function addStringAt(source,string,position){var output=void 0;if(this.simpleKeyboardInstance.options.debug){console.log(\"Caret at:\",position);}if(!position&&position!==0){output=source+string;}else{output=[source.slice(0,position),string,source.slice(position)].join('');/**\n       * Avoid caret position change when maxLength is set\n       */if(!this.isMaxLengthReached()){this.updateCaretPos(string.length);}}return output;}},{key:\"removeAt\",value:function removeAt(source,position){if(this.simpleKeyboardInstance.caretPosition===0){return source;}var output=void 0;var prevTwoChars=void 0;var emojiMatched=void 0;var emojiMatchedReg=/([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;/**\n     * Emojis are made out of two characters, so we must take a custom approach to trim them.\n     * For more info: https://mathiasbynens.be/notes/javascript-unicode\n     */if(position&&position>=0){prevTwoChars=source.substring(position-2,position);emojiMatched=prevTwoChars.match(emojiMatchedReg);if(emojiMatched){output=source.substr(0,position-2)+source.substr(position);this.updateCaretPos(2,true);}else{output=source.substr(0,position-1)+source.substr(position);this.updateCaretPos(1,true);}}else{prevTwoChars=source.slice(-2);emojiMatched=prevTwoChars.match(emojiMatchedReg);if(emojiMatched){output=source.slice(0,-2);this.updateCaretPos(2,true);}else{output=source.slice(0,-1);this.updateCaretPos(1,true);}}return output;}},{key:\"handleMaxLength\",value:function handleMaxLength(inputObj,options,updatedInput){var maxLength=options.maxLength;var currentInput=inputObj[options.inputName];var condition=currentInput.length===maxLength;if(/**\n       * If pressing this button won't add more characters\n       * We exit out of this limiter function\n       */updatedInput.length<=currentInput.length){return false;}if(Number.isInteger(maxLength)){if(options.debug){console.log(\"maxLength (num) reached:\",condition);}if(condition){this.maxLengthReached=true;return true;}else{this.maxLengthReached=false;return false;}}if((typeof maxLength===\"undefined\"?\"undefined\":_typeof(maxLength))===\"object\"){var _condition=currentInput.length===maxLength[options.inputName];if(options.debug){console.log(\"maxLength (obj) reached:\",_condition);}if(_condition){this.maxLengthReached=true;return true;}else{this.maxLengthReached=false;return false;}}}}]);return Utilities;}();/* harmony default export */ __webpack_exports__[\"a\"] = (Utilities);\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 49c3d456d0deb8cf6f5f","import SimpleKeyboard from './components/Keyboard';\nexport default SimpleKeyboard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/index.js","import './Keyboard.css';\n\n// Services\nimport PhysicalKeyboard from '../services/PhysicalKeyboard';\nimport KeyboardLayout from '../services/KeyboardLayout';\nimport Utilities from '../services/Utilities';\n\nclass SimpleKeyboard {\n  constructor(...params){\n    let keyboardDOMQuery = typeof params[0] === \"string\" ? params[0] : '.simple-keyboard';\n    let options = typeof params[0] === \"object\" ? params[0] : params[1];\n\n    if(!options)\n      options = {};\n\n    /**\n     * Initializing Utilities\n     */\n    this.utilities = new Utilities(this);\n\n    /**\n     * Processing options\n     */\n    this.keyboardDOM = document.querySelector(keyboardDOMQuery);\n    this.options = options;\n    this.options.layoutName = this.options.layoutName || \"default\";\n    this.options.theme = this.options.theme || \"hg-theme-default\";\n    this.options.inputName = this.options.inputName || \"default\";\n    this.input = {};\n    this.input[this.options.inputName] = '';\n    this.keyboardDOMClass = keyboardDOMQuery.split('.').join(\"\");\n    this.timers = {};\n    this.buttonElements = {};\n\n    /**\n     * Rendering keyboard\n     */\n    if(this.keyboardDOM)\n      this.render();\n    else {\n      console.warn(`\"${keyboardDOMQuery}\" was not found in the DOM.`);\n      throw new Error(\"KEYBOARD_DOM_ERROR\");\n    }\n\n    /**\n     * Saving instance\n     * This enables multiple simple-keyboard support with easier management\n     */\n    if(!window['SimpleKeyboardInstances'])\n      window['SimpleKeyboardInstances'] = {};\n      \n    window['SimpleKeyboardInstances'][this.utilities.camelCase(this.keyboardDOMClass)] = this;\n\n    /**\n     * Physical Keyboard support\n     */\n    this.physicalKeyboardInterface = new PhysicalKeyboard(this);\n  }\n\n  handleButtonClicked = (button) => {\n    let debug = this.options.debug;\n\n    /**\n     * Ignoring placeholder buttons\n     */\n    if(button === '{//}')\n      return false;\n    \n    if(!this.input[this.options.inputName])\n      this.input[this.options.inputName] = '';\n\n    let updatedInput = this.utilities.getUpdatedInput(button, this.input[this.options.inputName], this.options, this.caretPosition);\n\n    if(this.input[this.options.inputName] !== updatedInput){\n\n      /**\n       * If maxLength and handleMaxLength yield true, halting\n       */\n      if(this.options.maxLength && this.utilities.handleMaxLength(this.input, this.options, updatedInput)){\n        return false;\n      }\n\n      this.input[this.options.inputName] = updatedInput;\n\n      if(debug)\n        console.log('Input changed:', this.input);\n\n      /**\n       * syncInstanceInputs\n       */\n      if(this.options.syncInstanceInputs)\n        this.syncInstanceInputs(this.input);\n\n      /**\n       * Calling onChange\n       */\n      if(typeof this.options.onChange === \"function\")\n        this.options.onChange(this.input[this.options.inputName]);\n    }\n\n    /**\n     * Calling onKeyPress\n     */\n    if(typeof this.options.onKeyPress === \"function\")\n      this.options.onKeyPress(button);\n    \n      \n    if(debug){\n      console.log(\"Key pressed:\", button);\n    }\n  }\n\n  syncInstanceInputs = () => {\n    this.dispatch((section) => {\n      section.replaceInput(this.input);\n    });\n  }\n\n  clearInput = (inputName) => {\n    inputName = inputName || this.options.inputName;\n    this.input[this.options.inputName] = '';\n\n    /**\n     * syncInstanceInputs\n     */\n    if(this.options.syncInstanceInputs)\n      this.syncInstanceInputs(this.input);\n  }\n\n  getInput = (inputName) => {\n    inputName = inputName || this.options.inputName;\n\n    /**\n     * syncInstanceInputs\n     */\n    if(this.options.syncInstanceInputs)\n      this.syncInstanceInputs(this.input);\n\n    return this.input[this.options.inputName];\n  }\n\n  setInput = (input, inputName) => {\n    inputName = inputName || this.options.inputName;\n    this.input[inputName] = input;\n\n    /**\n     * syncInstanceInputs\n     */\n    if(this.options.syncInstanceInputs)\n      this.syncInstanceInputs(this.input);\n  }\n\n  replaceInput = (inputObj) => {\n    this.input = inputObj;\n  }\n\n  setOptions = option => {\n    option = option || {};\n    this.options = Object.assign(this.options, option);\n    this.render();\n  }\n\n  clear = () => {\n    this.keyboardDOM.innerHTML = '';\n    this.keyboardDOM.className = this.keyboardDOMClass;\n    this.buttonElements = {};\n  }\n\n  dispatch = (callback) => {\n    if(!window['SimpleKeyboardInstances']){\n      console.warn(`SimpleKeyboardInstances is not defined. Dispatch cannot be called.`);\n      throw new Error(\"INSTANCES_VAR_ERROR\");\n    }\n    \n    return Object.keys(window['SimpleKeyboardInstances']).forEach((key) => {\n      callback(window['SimpleKeyboardInstances'][key], key);\n    })\n  }\n\n  addButtonTheme = (buttons, className) => {\n    if(!className || !buttons)\n      return false;\n\n    buttons.split(\" \").forEach(button => {\n      className.split(\" \").forEach(classNameItem => {\n        if(!this.options.buttonTheme)\n          this.options.buttonTheme = [];\n\n        let classNameFound = false;\n  \n        /**\n         * If class is already defined, we add button to class definition\n         */\n        this.options.buttonTheme.map(buttonTheme => {\n\n          if(buttonTheme.class.split(\" \").includes(classNameItem)){\n            classNameFound = true;\n            \n            let buttonThemeArray = buttonTheme.buttons.split(\" \");\n            if(!buttonThemeArray.includes(button)){\n              classNameFound = true;\n              buttonThemeArray.push(button);\n              buttonTheme.buttons = buttonThemeArray.join(\" \");\n            }\n          }\n          return buttonTheme;\n        });\n\n        /**\n         * If class is not defined, we create a new entry\n         */\n        if(!classNameFound){\n          this.options.buttonTheme.push({\n            class: classNameItem,\n            buttons: buttons\n          });\n        }\n\n      });\n    });\n\n    this.render();\n  }\n\n  removeButtonTheme = (buttons, className) => {\n    /**\n     * When called with empty parameters, remove all button themes\n     */\n    if(!buttons && !className){\n      this.options.buttonTheme = [];\n      this.render();\n      return false;\n    }\n\n    /**\n     * If buttons are passed and buttonTheme has items\n     */\n    if(buttons && Array.isArray(this.options.buttonTheme) && this.options.buttonTheme.length){\n      let buttonArray = buttons.split(\" \");\n      buttonArray.forEach((button, key) => {\n        this.options.buttonTheme.map((buttonTheme, index) => {\n\n          /**\n           * If className is set, we affect the buttons only for that class\n           * Otherwise, we afect all classes\n           */\n          if(\n            (className && className.includes(buttonTheme.class)) ||\n            !className\n          ){\n            let filteredButtonArray = buttonTheme.buttons.split(\" \").filter(item => item !== button);\n\n            /**\n             * If buttons left, return them, otherwise, remove button Theme\n             */\n            if(filteredButtonArray.length){\n              buttonTheme.buttons = filteredButtonArray.join(\" \");\n            } else {\n              this.options.buttonTheme.splice(index, 1);\n              buttonTheme = null;\n            }\n \n          }\n\n          return buttonTheme;\n        });\n      });\n\n      this.render();\n    }\n  }\n\n  getButtonElement = (button) => {\n    let output;\n\n    let buttonArr = this.buttonElements[button];\n    if(buttonArr){\n      if(buttonArr.length > 1){\n        output = buttonArr;\n      } else {\n        output = buttonArr[0];\n      }\n    }\n\n    return output;\n  }\n\n  handleCaret = () => {\n    if(this.options.debug){\n      console.log(\"Caret handling started\");\n    }\n\n    document.addEventListener(\"keyup\", this.caretEventHandler);\n    document.addEventListener(\"mouseup\", this.caretEventHandler);\n    document.addEventListener(\"touchend\", this.caretEventHandler);\n  }\n\n  caretEventHandler = (event) => {\n    let targetTagName = event.target.tagName.toLowerCase();\n\n    if(\n      targetTagName === \"textarea\" ||\n      targetTagName === \"input\"\n    ){\n      this.caretPosition = event.target.selectionStart;\n\n      if(this.options.debug){\n        console.log('Caret at: ', event.target.selectionStart, event.target.tagName.toLowerCase());\n      }     \n    }\n  }\n\n  onInit = () => {\n    if(this.options.debug){\n      console.log(\"Initialized\");\n    }\n\n    /**\n     * Caret handling\n     */\n    this.handleCaret();\n\n    if(typeof this.options.onInit === \"function\")\n      this.options.onInit();\n  }\n\n  onRender = () => {\n    if(typeof this.options.onRender === \"function\")\n      this.options.onRender();\n  }\n\n  render = () => {\n    /**\n     * Clear keyboard\n     */\n    this.clear();\n\n    let layoutClass = this.options.layout ? \"hg-layout-custom\" : `hg-layout-${this.options.layoutName}`;\n    let layout = this.options.layout || KeyboardLayout.getDefaultLayout();\n\n    /**\n     * Account for buttonTheme, if set\n     */\n    let buttonThemesParsed = {};\n    if(Array.isArray(this.options.buttonTheme)){\n      this.options.buttonTheme.forEach(themeObj => {\n        if(themeObj.buttons && themeObj.class){\n          let themeButtons;\n\n          if(typeof themeObj.buttons === \"string\"){\n            themeButtons = themeObj.buttons.split(' ');\n          }\n\n          if(themeButtons){\n            themeButtons.forEach(themeButton => {\n              let themeParsed = buttonThemesParsed[themeButton];\n\n              // If the button has already been added\n              if(themeParsed){\n                // Making sure we don't add duplicate classes, even when buttonTheme has duplicates\n                if(!this.utilities.countInArray(themeParsed.split(\" \"), themeObj.class)){\n                  buttonThemesParsed[themeButton] = `${themeParsed} ${themeObj.class}`;\n                }\n              } else {\n                buttonThemesParsed[themeButton] = themeObj.class;\n              }\n            });\n          }\n        } else {\n          console.warn(`buttonTheme row is missing the \"buttons\" or the \"class\". Please check the documentation.`)\n        }\n      });\n    }\n\n    /**\n     * Adding themeClass, layoutClass to keyboardDOM\n     */\n    this.keyboardDOM.className += ` ${this.options.theme} ${layoutClass}`;\n\n    /**\n     * Iterating through each row\n     */\n    layout[this.options.layoutName].forEach((row, rIndex) => {\n      let rowArray = row.split(' ');\n\n      /**\n       * Creating empty row\n       */\n      var rowDOM = document.createElement('div');\n      rowDOM.setAttribute('data-keyboard', \"true\");\n      rowDOM.className += \"hg-row\";\n      \n\n      /**\n       * Iterating through each button in row\n       */\n      rowArray.forEach((button, bIndex) => {\n        let fctBtnClass = this.utilities.getButtonClass(button);\n        let buttonThemeClass = buttonThemesParsed[button];\n        let buttonDisplayName = this.utilities.getButtonDisplayName(button, this.options.display, this.options.mergeDisplay);\n\n        /**\n         * Creating button\n         */\n        var buttonDOM = document.createElement('div');\n        buttonDOM.setAttribute('data-keyboard', \"true\");\n        buttonDOM.className += `hg-button ${fctBtnClass}${buttonThemeClass ? \" \"+buttonThemeClass : \"\"}`;\n        buttonDOM.onclick = () => this.handleButtonClicked(button);\n        \n\n        /**\n         * Adding identifier\n         */\n        buttonDOM.setAttribute(\"data-skBtn\", button);\n\n        /**\n         * Adding unique id\n         * Since there's no limit on spawning same buttons, the unique id ensures you can style every button\n         */\n        let buttonUID = `${this.options.layoutName}-r${rIndex}b${bIndex}`;\n        buttonDOM.setAttribute(\"data-skBtnUID\", buttonUID);\n\n        /**\n         * Adding display label\n         */\n        buttonDOM.setAttribute(\"data-displayLabel\", buttonDisplayName);\n\n        /**\n         * Adding button label to button\n         */\n        var buttonSpanDOM = document.createElement('span');\n        buttonSpanDOM.setAttribute('data-keyboard', \"true\");\n        buttonSpanDOM.innerHTML = buttonDisplayName;\n        buttonDOM.appendChild(buttonSpanDOM);\n\n        /**\n         * Adding to buttonElements\n         */\n        if(!this.buttonElements[button])\n          this.buttonElements[button] = [];\n\n        this.buttonElements[button].push(buttonDOM);\n\n        /**\n         * Appending button to row\n         */\n        rowDOM.appendChild(buttonDOM);\n\n      });\n\n      /**\n       * Appending row to keyboard\n       */\n      this.keyboardDOM.appendChild(rowDOM);\n    });\n\n    /**\n     * Calling onRender\n     */\n    this.onRender();\n\n    if(!this.initialized){\n      this.initialized = true;\n\n      /**\n       * Calling onInit\n       */\n      this.onInit();\n    }\n  }\n}\n\nexport default SimpleKeyboard;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/components/Keyboard.js","class PhysicalKeyboard {\n  constructor(simpleKeyboardInstance){\n    this.simpleKeyboardInstance = simpleKeyboardInstance;\n\n    this.initKeyboardListener();\n  }\n\n  initKeyboardListener = () => {\n    // Normal Keyboard\n    document.addEventListener(\"keydown\", (event) => {\n      if(this.simpleKeyboardInstance.options.physicalKeyboardHighlight){\n        let buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n        this.simpleKeyboardInstance.dispatch(instance => {\n          let buttonDOM = instance.getButtonElement(buttonPressed) || instance.getButtonElement(`{${buttonPressed}}`);\n\n          if(buttonDOM){\n            buttonDOM.style.backgroundColor = this.simpleKeyboardInstance.options.physicalKeyboardHighlightBgColor || \"#9ab4d0\";\n            buttonDOM.style.color = this.simpleKeyboardInstance.options.physicalKeyboardHighlightTextColor || \"white\";\n          }\n        });\n      }\n    });\n\n    // Removing button style on keyup\n    document.addEventListener(\"keyup\", (event) => {\n      if(this.simpleKeyboardInstance.options.physicalKeyboardHighlight){\n        let buttonPressed = this.getSimpleKeyboardLayoutKey(event);\n\n        this.simpleKeyboardInstance.dispatch(instance => {\n          let buttonDOM = instance.getButtonElement(buttonPressed) || instance.getButtonElement(`{${buttonPressed}}`);\n\n          if(buttonDOM){\n            buttonDOM.removeAttribute(\"style\");\n          }\n        });\n      }\n    });\n  }\n\n  getSimpleKeyboardLayoutKey = (event) => {\n    if(this.simpleKeyboardInstance.options.debug){\n      console.log(event);\n    }\n    \n    let output;\n\n    if(\n      event.code.includes(\"Numpad\") ||\n      event.code.includes(\"Shift\") ||\n      event.code.includes(\"Space\") ||\n      event.code.includes(\"Backspace\") ||\n      event.code.includes(\"Control\") ||\n      event.code.includes(\"Alt\") ||\n      event.code.includes(\"Meta\")\n    ){\n      output = event.code;\n    } else {\n      output = event.key;\n    }\n\n    /**\n     * If button is not uppercase, casting to lowercase\n     */\n    if (\n      output !== output.toUpperCase() ||\n      (event.code[0] === \"F\" && Number.isInteger(Number(event.code[1])) && event.code.length <= 3)\n    ) {\n      output = output.toLowerCase();\n    }\n\n    return output;\n  }\n}\n\nexport default PhysicalKeyboard;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/PhysicalKeyboard.js","class KeyboardLayout {\n  static getDefaultLayout = () => {\n    return {\n      'default': [\n        '` 1 2 3 4 5 6 7 8 9 0 - = {bksp}',\n        '{tab} q w e r t y u i o p [ ] \\\\',\n        '{lock} a s d f g h j k l ; \\' {enter}',\n        '{shift} z x c v b n m , . / {shift}',\n        '.com @ {space}'\n      ],\n      'shift': [\n        '~ ! @ # $ % ^ & * ( ) _ + {bksp}',\n        '{tab} Q W E R T Y U I O P { } |',\n        '{lock} A S D F G H J K L : \" {enter}',\n        '{shift} Z X C V B N M < > ? {shift}',\n        '.com @ {space}'\n      ]\n    } \n  }\n}\n\nexport default KeyboardLayout;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/KeyboardLayout.js","class Utilities {\n  constructor(simpleKeyboardInstance){\n    this.simpleKeyboardInstance = simpleKeyboardInstance;\n  }\n\n  getButtonClass = button => {\n    let buttonTypeClass = (button.includes(\"{\") && button.includes(\"}\") && button !== '{//}') ? \"functionBtn\" : \"standardBtn\";\n    let buttonWithoutBraces = button.replace(\"{\", \"\").replace(\"}\", \"\");\n    let buttonNormalized = '';\n\n    if(buttonTypeClass !== \"standardBtn\")\n      buttonNormalized = ` hg-button-${buttonWithoutBraces}`;\n\n    return `hg-${buttonTypeClass}${buttonNormalized}`;\n  }\n\n  getDefaultDiplay(){\n    return {\n      '{bksp}': '⌫',\n      '{backspace}': '⌫',\n      '{enter}': 'enter ↵',\n      '{shift}': 'shift  ⇧',\n      '{shiftleft}': 'shift  ⇧',\n      '{shiftright}': 'shift  ⇧',\n      '{alt}': 'alt',\n      '{s}': 'shift',\n      '{tab}': 'tab ↹',\n      '{lock}': 'caps ⇪',\n      '{capslock}': 'caps lock ⇪',\n      '{accept}': 'Submit',\n      '{space}': ' ',\n      '{//}': ' ',\n      \"{esc}\": \"Esc\",\n      \"{escape}\": \"Esc\",\n      \"{f1}\": \"f1\",\n      \"{f2}\": \"f2\",\n      \"{f3}\": \"f3\",\n      \"{f4}\": \"f4\",\n      \"{f5}\": \"f5\",\n      \"{f6}\": \"f6\",\n      \"{f7}\": \"f7\",\n      \"{f8}\": \"f8\",\n      \"{f9}\": \"f9\",\n      \"{f10}\": \"f10\",\n      \"{f11}\": \"f11\",\n      \"{f12}\": \"f12\",\n      '{numpaddivide}': '/',\n      '{numlock}': 'lock',\n      \"{arrowup}\": \"↑\",\n      \"{arrowleft}\": \"←\",\n      \"{arrowdown}\": \"↓\",\n      \"{arrowright}\": \"→\",\n      \"{prtscr}\": \"print\",\n      \"{scrolllock}\": \"scroll\",\n      \"{pause}\": \"pause\",\n      \"{insert}\": \"ins\",\n      \"{home}\": \"home\",\n      \"{pageup}\": \"up\",\n      \"{delete}\": \"del\",\n      \"{end}\": \"end\",\n      \"{pagedown}\": \"down\",\n      \"{numpadmultiply}\": \"*\",\n      \"{numpadsubtract}\": \"-\",\n      \"{numpadadd}\": \"+\",\n      \"{numpadenter}\": \"enter\",\n      \"{period}\": \".\",\n      \"{numpaddecimal}\": \".\",\n      \"{numpad0}\": \"0\",\n      \"{numpad1}\": \"1\",\n      \"{numpad2}\": \"2\",\n      \"{numpad3}\": \"3\",\n      \"{numpad4}\": \"4\",\n      \"{numpad5}\": \"5\",\n      \"{numpad6}\": \"6\",\n      \"{numpad7}\": \"7\",\n      \"{numpad8}\": \"8\",\n      \"{numpad9}\": \"9\",\n    };\n  }\n\n  getButtonDisplayName = (button, display, mergeDisplay) => {\n    if(mergeDisplay){\n      display = Object.assign({}, this.getDefaultDiplay(), display);\n    } else {\n      display = display || this.getDefaultDiplay();\n    }\n\n    return display[button] || button;\n  }\n\n  getUpdatedInput = (button, input, options, caretPos) => {\n    \n    let output = input;\n\n    if((button === \"{bksp}\" || button === \"{backspace}\") && output.length > 0){\n      output = this.removeAt(output, caretPos);\n\n    } else if(button === \"{space}\")\n      output = this.addStringAt(output, \" \", caretPos);\n\n    else if(button === \"{tab}\" && !(typeof options.tabCharOnTab === \"boolean\" && options.tabCharOnTab === false)){\n      output = this.addStringAt(output, \"\\t\", caretPos);\n\n    } else if((button === \"{enter}\" || button === \"{numpadenter}\") && options.newLineOnEnter)\n      output = this.addStringAt(output, \"\\n\", caretPos);\n\n    else if(button.includes(\"numpad\") && Number.isInteger(Number(button[button.length - 2]))){\n      output = this.addStringAt(output, button[button.length - 2], caretPos);\n    }\n    else if(button === \"{numpaddivide}\")\n      output = this.addStringAt(output, '/', caretPos);\n\n    else if(button === \"{numpadmultiply}\")\n      output = this.addStringAt(output, '*', caretPos);\n    else if(button === \"{numpadsubtract}\")\n      output = this.addStringAt(output, '-', caretPos);\n\n    else if(button === \"{numpadadd}\")\n      output = this.addStringAt(output, '+', caretPos);\n\n    else if(button === \"{numpaddecimal}\")\n      output = this.addStringAt(output, '.', caretPos);\n\n    else if(button === \"{\" || button === \"}\")\n      output = this.addStringAt(output, button, caretPos);\n\n    else if(!button.includes(\"{\") && !button.includes(\"}\"))\n      output = this.addStringAt(output, button, caretPos);\n\n    return output;\n  }\n\n  updateCaretPos = (length, minus) => {\n    if(minus){\n      if(this.simpleKeyboardInstance.caretPosition > 0)\n        this.simpleKeyboardInstance.caretPosition = this.simpleKeyboardInstance.caretPosition - length\n    } else {\n      this.simpleKeyboardInstance.caretPosition = this.simpleKeyboardInstance.caretPosition + length;\n    }\n  }\n\n  addStringAt(source, string, position){\n    let output;\n\n    if(this.simpleKeyboardInstance.options.debug){\n      console.log(\"Caret at:\", position);\n    }\n\n    if(!position && position !== 0){\n      output = source + string;\n    } else {\n      output = [source.slice(0, position), string, source.slice(position)].join('');\n\n      /**\n       * Avoid caret position change when maxLength is set\n       */\n      if(!this.isMaxLengthReached()){\n        this.updateCaretPos(string.length);\n      }\n\n    }\n\n    return output;\n  }\n\n  removeAt(source, position){\n    if(this.simpleKeyboardInstance.caretPosition === 0){\n      return source;\n    }\n\n    let output;\n    let prevTwoChars;\n    let emojiMatched;\n    let emojiMatchedReg = /([\\uD800-\\uDBFF][\\uDC00-\\uDFFF])/g;\n\n    /**\n     * Emojis are made out of two characters, so we must take a custom approach to trim them.\n     * For more info: https://mathiasbynens.be/notes/javascript-unicode\n     */\n    if(position && position >= 0){\n      prevTwoChars = source.substring(position - 2, position)\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n      if(emojiMatched){\n        output = source.substr(0, (position - 2)) + source.substr(position);\n        this.updateCaretPos(2, true);\n      } else {\n        output = source.substr(0, (position - 1)) + source.substr(position);\n        this.updateCaretPos(1, true);\n      }\n    } else {\n      prevTwoChars = source.slice(-2);\n      emojiMatched = prevTwoChars.match(emojiMatchedReg);\n\n      if(emojiMatched){\n        output = source.slice(0, -2);\n        this.updateCaretPos(2, true);\n      } else {\n        output = source.slice(0, -1);\n        this.updateCaretPos(1, true);\n      }\n    }\n\n    return output;\n  }\n\n  handleMaxLength(inputObj, options, updatedInput){\n    let maxLength = options.maxLength;\n    let currentInput = inputObj[options.inputName];\n    let condition = currentInput.length === maxLength;\n\n\n    if(\n      /**\n       * If pressing this button won't add more characters\n       * We exit out of this limiter function\n       */\n      updatedInput.length <= currentInput.length\n    ){\n      return false;\n    }\n\n    if(Number.isInteger(maxLength)){\n      if(options.debug){\n        console.log(\"maxLength (num) reached:\", condition);\n      }\n\n      if(condition){\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n\n    if(typeof maxLength === \"object\"){\n      let condition = currentInput.length === maxLength[options.inputName];\n\n      if(options.debug){\n        console.log(\"maxLength (obj) reached:\", condition);\n      }\n\n      if(condition){\n        this.maxLengthReached = true;\n        return true;\n      } else {\n        this.maxLengthReached = false;\n        return false;\n      }\n    }\n  }\n\n  isMaxLengthReached = () => {\n    return Boolean(this.maxLengthReached);\n  }\n\n  camelCase = (string) => {\n    return string.toLowerCase().trim().split(/[.\\-_\\s]/g).reduce((string, word) => string + word[0].toUpperCase() + word.slice(1));\n  };\n\n  countInArray = (array, value) => {\n    return array.reduce((n, x) => n + (x === value), 0);\n  }\n\n}\n\nexport default Utilities;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/services/Utilities.js"],"sourceRoot":""}